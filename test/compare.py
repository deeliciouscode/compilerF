phillips = """Reset,
    Pushfun "main",
    Call,
    Halt,
    Pushval (Integer 2),
    Pushval (Integer 1),
    Pushval (Integer 0),
    Pushfun "f",
    Makeapp,
    Makeapp,
    Makeapp,
    Update 0,
    Slide 1,
    Unwind,
    Call,
    Return,
    Pushparam 3,
    Update 3,
    Slide 4,
    Unwind,
    Call,
    Return,
    Pushval (Bool False),
    Update 0,
    Slide 1,
    Unwind,
    Call,
    Return,
    Pushval (Bool True),
    Update 0,
    Slide 1,
    Unwind,
    Call,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Operator Not,
    Update 1,
    Slide 2,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Operator Negate,
    Update 1,
    Slide 2,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator Or,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator And,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator Plus,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator Minus,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator Times,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator DividedBy,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator Equals,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Unwind,
    Call,
    Operator LessThan,
    Update 2,
    Slide 3,
    Return,
    Pushparam 1,
    Unwind,
    Call,
    Pushparam 3,
    Pushparam 5,
    Operator If,
    Update 3,
    Slide 4,
    Unwind,
    Call,
    Return"""

ours = """Reset,Pushfun "main",Call,Halt,Pushval (IntX 2),Pushval (IntX 0),Pushfun "f",Makeapp,Makeapp,Update 0,Slide 1,Unwind,Call,Return,Pushparam 3,Update 3,Slide 4,Unwind,Call,Return,Pushval (BoolX False),Update 0,Slide 1,Unwind,Call,Return,Pushval (BoolX True),Update 0,Slide 1,Unwind,Call,Return,Pushparam 1,Unwind,Call,Operator Not,Update 1,Slide 2,Return,Pushparam 1,Unwind,Call,Operator Negate,Update 1,Slide 2,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator Or,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator And,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator Plus,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator Minus,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator Times,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator DividedBy,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator Equals,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Unwind,Call,Operator LessThan,Update 2,Slide 3,Return,Pushparam 1,Unwind,Call,Pushparam 3,Pushparam 5,Operator If,Update 3,Slide 4,Unwind,Call,Return"""

a = phillips.split(",")
b = ours.split(",")


a = [elem.strip() for elem in a]

same_len = len(a) == len(b)

if not same_len:
    print(len(a))
    print(len(a))
    print("error: a and b not of same length")
else:
    for i in range(len(a)):
        if a[i] != b[i]:
            print (a[i], b[i])
